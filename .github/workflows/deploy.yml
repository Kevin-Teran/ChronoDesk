name: Deploy Full-Stack App

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_DATABASE: ${{ vars.DB_DATABASE }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      # Paso 1: Checkout del cÃ³digo
      - name: Checkout repository
        uses: actions/checkout@v4

      # Paso 2: Configurar Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      # Paso 3: Instalar dependencias del frontend (React/Vite)
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      # Paso 4: Build del frontend
      - name: Build frontend
        working-directory: ./frontend
        run: npm run build
        env:
          VITE_API_URL: ${{ vars.BACKEND_URL || 'http://localhost:5001/api/v1' }}

      # Paso 5: Instalar dependencias del backend (Node.js/Express)
      - name: Install backend dependencies
        working-directory: ./backend
        run: npm install

      # Paso 6: Configurar entorno del backend
      - name: Setup backend environment
        working-directory: ./backend
        run: |
          echo "DB_HOST=${{ vars.DB_HOST }}" >> .env
          echo "DB_PORT=${{ vars.DB_PORT }}" >> .env
          echo "DB_DATABASE=${{ vars.DB_DATABASE }}" >> .env
          echo "DB_USERNAME=root" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env

      # Paso 7: Ejecutar migraciones de la base de datos
      - name: Run database migrations
        working-directory: ./backend
        run: npx sequelize-cli db:migrate
        env:
          NODE_ENV: production

      # Paso 8: Iniciar servidor backend (para pruebas)
      - name: Start backend server
        working-directory: ./backend
        run: npm start &
        env:
          PORT: ${{ vars.BACKEND_PORT }}

      # Paso 9: Desplegar frontend (ejemplo con Vercel)
      - name: Deploy frontend to Vercel
        uses: amondnet/vercel-action@v30
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend

      # Paso 10: Desplegar backend (ejemplo con Heroku)
      - name: Deploy backend to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: "chrono-desk-backend"
          heroku_email: "tu-email@example.com"
          working-directory: ./backend